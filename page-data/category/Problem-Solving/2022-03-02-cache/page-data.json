{"componentChunkName":"component---src-templates-blog-post-js","path":"/category/Problem-Solving/2022-03-02-cache/","result":{"data":{"markdownRemark":{"html":"<h2>Lv 2. 캐시</h2>\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/17680?language=javascript\">문제</a></p>\n<p>처음 풀이</p>\n<pre><code>function solution(cacheSize, cities) {\n    let cache=[];\n    let answer=0;\n    cities=cities.map(value=>value.toLowerCase());\n    for(let i=0; i&#x3C;cacheSize;i++){\n        cache.push(cities[i]);\n        answer+=5;\n    }\n    for(let i=cacheSize;i&#x3C;cities.length;i++){\n        if(cache.includes(cities[i])){\n            cache.push(cache.splice(cache.indexOf(cities[i]),1)[0]);\n            answer++;\n        }else{\n            answer+=5;\n            cache.shift();\n            cache.push(cities[i]);\n        }\n    }\n    return answer;\n}\n</code></pre>\n<p>처음에 cacheSize만큼 cities배열에 있는 값을 무조건 넣고 배열 크기를 유지하면서 배열에 포함되어있으면 제거하고 다시 push해서 맨 뒤에 넣고, 만약 없으면 맨 앞의 값을 빼고, 새로 들어온 값을 push 해줬다. 하지만 맨 처음 cacheSize만큼 넣을 때도 겹치는 게 있을 수 있다는 걸 고려를 안해서 70점이 나왔다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/49175629/156288800-02a10635-f0a0-4b05-9127-450698b8b102.png\" alt=\"image\"></p>\n<p>코드를 고쳐서 처음부터 넣고, cacheSize를 넘어가면 예외처리를 해서 다시 풀었다.</p>\n<p>최종 풀이</p>\n<pre><code>function solution(cacheSize, cities) {\n    let cache=[];\n    let answer=0;\n    cities=cities.map(value=>value.toLowerCase());\n    if (cacheSize == 0) return cities.length * 5;\n    for(let i=0;i&#x3C;cities.length;i++){\n        if(cache.includes(cities[i])){\n            cache.push(cache.splice(cache.indexOf(cities[i]),1)[0]);\n            answer++;\n        }else{\n            if(cache.length&#x3C;cacheSize){\n                cache.push(cities[i]);\n            }else{\n                cache.shift();\n                cache.push(cities[i]);\n            }\n            answer+=5;\n        }\n    }\n    return answer;\n}\n</code></pre>","frontmatter":{"title":"캐시 (프로그래머스 LV.2)"}},"allMarkdownRemark":{"group":[{"category":"Algorithm","totalCount":8},{"category":"JavaScript","totalCount":7},{"category":"Problem-Solving","totalCount":25},{"category":"React","totalCount":3},{"category":"Web","totalCount":7}]}},"pageContext":{"slug":"/category/Problem-Solving/2022-03-02-cache/"}},"staticQueryHashes":["2885866554"]}