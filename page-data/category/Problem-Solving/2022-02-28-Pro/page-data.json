{"componentChunkName":"component---src-templates-blog-post-js","path":"/category/Problem-Solving/2022-02-28-Pro/","result":{"data":{"markdownRemark":{"html":"<h2>Lv 2. 기능개발</h2>\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/42586\">문제</a></p>\n<pre><code>function solution(progresses, speeds) {\n    //나보다 작으면 stack에 넣고 크면 stack비우고 넣어\n    let answer = [];\n    let last=[];\n    for(let i=0; i&#x3C;progresses.length;i++){\n        last.push(Math.ceil((100-progresses[i])/speeds[i]))\n    }\n    let stack=[];\n    let count=0;\n    console.log(last)\n    stack[0]=last[0];\n    for(let i=1; i&#x3C;last.length;i++){\n        count=0;\n        if(stack[0]>=last[i]){\n            stack.push(last[i]);\n        }else{\n            while(stack.length!=0){\n                stack.pop();\n                count++;\n            }\n            stack.push(last[i]);\n            answer.push(count)\n        }\n    }\n    if(stack.length!=0){\n        count=0;\n        while(stack.length!=0){\n            stack.pop();\n            count++;\n        }\n        answer.push(count);\n    }\n    return answer;\n}\n</code></pre>\n<p>100 에서 빼서 speed로 나눠서 몇일이 남았는지 구한다. stack을 선언하고 값을 하나 넣는다. stack의 0번째는 가장 큰 값을 가지도록 한다. stack[0]과 비교해서 작거나 같으면 stack에 넣고, 크면 stack을 비우고 그 크기만큼 answer에 넣어준다. 작다면 stack에 넣는다.</p>","frontmatter":{"title":"기능개발 (프로그래머스 LV.2)"}},"allMarkdownRemark":{"group":[{"category":"Algorithm","totalCount":8},{"category":"JavaScript","totalCount":7},{"category":"Problem-Solving","totalCount":25},{"category":"React","totalCount":3},{"category":"Web","totalCount":7}]}},"pageContext":{"slug":"/category/Problem-Solving/2022-02-28-Pro/"}},"staticQueryHashes":["2885866554"]}