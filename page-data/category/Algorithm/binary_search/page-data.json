{"componentChunkName":"component---src-templates-blog-post-js","path":"/category/Algorithm/binary_search/","result":{"data":{"markdownRemark":{"html":"<h2>알고리즘 강의</h2>\n<h3>이진 탐색</h3>\n<p>시간 복잡도 O(log n)의 가장 빠른 탐색, but 정렬되어 있을 때만 사용 가능.</p>\n<pre><code>function binarySearch(array, findValue) {\n    let left = 0;\n    let right = array.length - 1;\n    let mid = Math.floor((left + right) / 2);\n    while (left &#x3C; right) {\n        if (array[mid] === findValue) {\n        return mid;\n        }\n\n        if (array[mid] &#x3C; findValue) {\n        left = mid + 1;\n        } else {\n        right = mid - 1;\n        }\n        mid = Math.floor((left + right) / 2);\n    }\n    return -1;\n}\n</code></pre>","frontmatter":{"title":"Javascript로 이진탐색 만들기"}},"allMarkdownRemark":{"group":[{"category":"Algorithm","totalCount":8},{"category":"JavaScript","totalCount":7},{"category":"Problem-Solving","totalCount":25},{"category":"React","totalCount":3},{"category":"Web","totalCount":7}]}},"pageContext":{"slug":"/category/Algorithm/binary_search/"}},"staticQueryHashes":["2885866554"]}