{"version":3,"file":"component---src-pages-using-typescript-tsx-eb4d9de539beb0368826.js","mappings":"6MA6CaA,EAA0B,kBAAMC,EAAAA,EAAAA,IAACC,EAAAA,EAAD,CAAKC,MAAM,oBAAjD,EAEP,UAlCwD,SAAC,GAAD,IACtDC,EADsD,EACtDA,KACAC,EAFsD,EAEtDA,SAFsD,OAItDJ,EAAAA,EAAAA,IAACK,EAAAA,EAAD,MACEL,EAAAA,EAAAA,IAAAA,KAAAA,KAAAA,oBACkBA,EAAAA,EAAAA,IAAAA,IAAAA,KAAAA,2BAElBA,EAAAA,EAAAA,IAAAA,IAAAA,KAAAA,6CAC2CA,EAAAA,EAAAA,IAAAA,OAAAA,KAAAA,YAD3C,2CAE8BA,EAAAA,EAAAA,IAAAA,OAAAA,KAAAA,YAF9B,sCAGUA,EAAAA,EAAAA,IAAAA,OAAAA,KAAAA,oBAHV,OAKAA,EAAAA,EAAAA,IAAAA,IAAAA,KAAAA,6CAC2CA,EAAAA,EAAAA,IAAAA,OAAAA,KAAAA,cAD3C,qBAEUA,EAAAA,EAAAA,IAAAA,OAAAA,KAAAA,cAFV,iBAE8CA,EAAAA,EAAAA,IAAAA,OAAAA,KAAAA,YAF9C,WAIAA,EAAAA,EAAAA,IAAAA,IAAAA,KAAAA,iCAC+BA,EAAAA,EAAAA,IAAAA,OAAAA,KAAOI,EAASE,UAD/C,uBAEYH,EAAKI,KAAKC,UAFtB,MAIAR,EAAAA,EAAAA,IAAAA,IAAAA,KAAAA,kCACkC,KAChCA,EAAAA,EAAAA,IAAAA,IAAAA,CAAGS,KAAK,yEAAR,kCAFF,MAOAT,EAAAA,EAAAA,IAACU,EAAAA,KAAD,CAAMC,GAAG,KAAT,2BA5BJ,C,yDCFA,SAASV,EAAT,GAAgD,IAAD,IAAhCW,EAAgC,EAAhCA,YAAaV,EAAmB,EAAnBA,MAAOW,EAAY,EAAZA,SACzBN,GAASO,EAAAA,EAAAA,gBAAe,YAAxBP,KAcFQ,EAAkBH,GAAeL,EAAKS,aAAaJ,YACnDK,EAAY,UAAGV,EAAKS,oBAAR,aAAG,EAAmBd,MAExC,OACE,yBACE,qBAAQe,EAAkBf,EAAN,MAAiBe,EAAiBf,IACtD,gBAAMgB,KAAK,cAAcC,QAASJ,KAClC,gBAAMK,SAAS,WAAWD,QAASjB,KACnC,gBAAMkB,SAAS,iBAAiBD,QAASJ,KACzC,gBAAMK,SAAS,UAAUD,QAAQ,aACjC,gBAAMD,KAAK,eAAeC,QAAQ,aAClC,gBAAMD,KAAK,kBAAkBC,SAAS,UAAAZ,EAAKS,oBAAL,eAAmBK,SAAnB,MACtC,gBAAMH,KAAK,gBAAgBC,QAASjB,KACpC,gBAAMgB,KAAK,sBAAsBC,QAASJ,IACzCF,EAGN,CAEDZ,EAAIqB,aAAe,CACjBV,YAAY,IAQd,K","sources":["webpack://groot-tech-blog/./src/pages/using-typescript.tsx","webpack://groot-tech-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["Head","___EmotionJSX","Seo","title","data","location","Layout","pathname","site","buildTime","href","Link","to","description","children","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","defaultProps"],"sourceRoot":""}